export interface Sigact {
  complexAttack: string;
  classificationReleasabilityMarkAlias: string;
  vehicleNearestECMToVehicleStruck: string;
  reportKey: string;
  primaryEventType: string;
  enemyKIA: number;
  counterAttack: string;
  mgrsText: string;
  classification: string;
  friendlyKIA: number;
  summaryClassificationReleasabilityMark: string;
  involvedCLC: string;
  situationID: string;
  classificationReleasabilityMark: string;
  tearLineSourceReportKey: string;
  enemyDetained: number;
  dateOccurred: Date;
  unitName: string;
  longitude: number;
  datePostedZulu: Date;
  country: string;
  vehicleSummary: string;
  originatorGroup: string;
  coordinatedAttack: string;
  summaryClassification: string;
  cfciWia: number;
  originatingNation: string;
  originatingSystem: string;
  vehicleDistanceBetween: string;
  dateInitialPublishedZulu: Date;
  unitActivity: string;
  intendedEffect: string;
  msc: string;
  dateOccurredZulu: Date;
  updatedByName: string;
  classificationDomain: string;
  vehicleConvoyCount: string;
  updatedByUnit: string;
  hostNationAbd: number;
  medevacRequested: string;
  cfciKia: number;
  isClosed: string;
  vehicleConvoySpeedMeasure: string;
  classificationCodeWord: string;
  enemyWia: number;
  civilianAbd: number;
  classificationAlias: string;
  friendlyAbd: number;
  coordsUnknown: string;
  precedence: string;
  updatedByGroup: string;
  vehicleConvoySpeed: string;
  tipReportedBy: string;
  tearLineSourceReportDateUpdated: string;
  latitude: number;
  dateUpdatedZulu: Date;
  datePosted: Date;
  originatingNetwork: string;
  civilianWIA: number;
  civilianKIA: number;
  fob: string;
  route: string;
  dateUpdated: Date;
  tearLineClassification: string;
  typeOfUnit: string;
  city: string;
  classificationDeclassifyOn: Date;
  province: string;
  primaryEventCategory: string;
  isTearLine: string;
  region: string;
  classificationCaveat: string;
  trackingNumber: string;
  originatingSite: string;
  hostNationKia: number;
  theaterFilter: string;
  cfciAbd: number;
  gmtDelta: number;
  estimatedMgrs: string;
  inVicinityOf: string;
  estimatedDtg: Date;
  vehicleNearestEcmToIed: string;
  tearLineContact: string;
  reportingUnit: string;
  dateInitialPublished: Date;
  friendlyWia: number;
  title: string;
  originatorName: string;
  originatorUnit: string;
  spotClassification: string;
  tearLineReleasability: string;
  reportSource: string;
  cityZone: string;
  summary: string;
  vehicleOtherCounterMeasures: string;
  spotClassificationReleasabilityMark: string;
  timeUnknown: string;
  hostNationWia: number;
}
